apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator
  labels:
    type: coordinator
spec:
  selector:
    matchLabels:
      type: coordinator
  template:
    metadata:
      labels:
        type: coordinator
    spec:
      volumes:
      - name: google-cloud-key
        secret:
          secretName: service-account-credentials
      hostname: "coordinator"
      containers:
      - name: coordinator
        image: "us-central1-docker.pkg.dev/mapreduce-irio/main/mapreduce:dev"
        imagePullPolicy: Always
        command: ["python3"]
        args: ["-m", "mapreduce.coordinator.server"]
        livenessProbe:
          grpc:
            port: 8091
          initialDelaySeconds: 30
          periodSeconds: 10
        ports:
        - containerPort: 8091
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
        env:
        - name: HTTP_PORT
          value: "[::]:8091"
        - name: NODE_PORT
          value: "50051"
        - name: NODES_ADDR
          value: "worker.default.svc.cluster.local"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: "db-secrets"
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: "db-secrets"
              key: password
        - name: DB_HOST
          value: "sql-proxy.default.svc.cluster.local"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: "db-secrets"
              key: database
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        - name: DEFAULT_BUCKET
          value: "irio_test"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    type: worker
spec:
  replicas: 3
  selector:
    matchLabels:
      type: worker
  template:
    metadata:
      labels:
        type: worker
    spec:
      hostname: "worker"
      containers:
      - name: worker
        image: "us-central1-docker.pkg.dev/mapreduce-irio/main/mapreduce:dev"
        imagePullPolicy: Always
        command: ["python3"]
        args: ["-m", "mapreduce.worker.server"]
        livenessProbe:
          grpc:
            port: 50051
          initialDelaySeconds: 30
          periodSeconds: 10
        ports:
        - containerPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    type: frontend
spec:
  selector:
    matchLabels:
      type: frontend
  template:
    metadata:
      labels:
        type: frontend
    spec:
      hostname: "frontend"
      containers:
      - name: frontend
        image: "us-central1-docker.pkg.dev/mapreduce-irio/main/mapreduce:dev"
        imagePullPolicy: Always
        command: ["python3"]
        args: ["-m", "gunicorn", "mapreduce.frontend.server", "--access-logfile", "-", "-b", "0.0.0.0:8000"]
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 10
        ports:
        - containerPort: 8000
        env:
        - name: COORDINATOR_ADDR
          value: "coordinator.default.svc.cluster.local:8091"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: "frontend-secrets"
              key: secret_key
        - name: AUTH_USER
          valueFrom:
            secretKeyRef:
              name: "frontend-secrets"
              key: username
        - name: AUTH_PASS
          valueFrom:
            secretKeyRef:
              name: "frontend-secrets"
              key: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sql-proxy
  labels:
    type: sql-proxy
spec:
  selector:
    matchLabels:
      type: sql-proxy
  template:
    metadata:
      labels:
        type: sql-proxy
    spec:
      hostname: "sql-proxy"
      containers:
        - name: "sql-proxy"
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: "db-secrets"
                  key: username
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: "db-secrets"
                  key: password
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: "db-secrets"
                  key: database
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.1
          args:
            - "--auto-iam-authn"
            - "--structured-logs"
            - "--port=5432"
            - "--address=0.0.0.0"
            - "mapreduce-irio:us-central1:mapreduce-dev"
          securityContext:
            runAsNonRoot: true

